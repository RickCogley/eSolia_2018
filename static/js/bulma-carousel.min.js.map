{"version":3,"sources":["../../src/bulma/bower_components/bulma-carousel/dist/bulma-carousel.js"],"names":["global","factory","exports","_typeof","module","define","amd","bulmaCarousel","undefined","EventEmitter","listeners","arguments","length","_classCallCheck","this","_listeners","Map","_middlewares","_createClass","key","value","listenerCount","eventName","has","get","removeListeners","_this","middleware","Array","isArray","name","forEach","e","delete","removeMiddleware","fn","_this2","set","push","_this3","on","callback","_this4","once","toString","split","emit","data","_this5","silent","middlewares","doneCount","execute","listener","index","newData","indexOf","splice","supportsPassive","opts","Object","defineProperty","window","addEventListener","removeEventListener","_EventEmitter","Carousel","selector","_this6","_possibleConstructorReturn","__proto__","getPrototypeOf","call","_clickEvents","carousel","document","querySelector","Error","options","assign","threshold","restraint","allowedTime","init","_inherits","_this7","forceHiddenNavigation","computedStyle","getComputedStyle","carouselWidth","parseInt","getPropertyValue","carouselContainer","carouselItems","querySelectorAll","carouselItemsArray","from","dataset","size","classList","contains","offset","style","left","transform","carouselItem","flexBasis","_initNavigation","img","scale","naturalWidth","height","naturalHeight","onload","currentItem","node","pos","add","_setOrder","autoplay","_autoPlay","delay","_bindEvents","forceHidden","previousControl","nextControl","display","_this8","clickEvent","preventDefault","_slide","_autoPlayInterval","clearInterval","passive","_swipeStart","_swipeEnd","_next","element","nextElementSibling","_previous","previousElementSibling","order","zIndex","item","i","j","ref","event","changedTouches","_touch","start","time","Date","getTime","x","pageX","y","pageY","dist","_handleGesture","Math","abs","_this9","direction","oldItemNode","remove","setTimeout","_this10","setInterval","attach","carouselInstances","carousels"],"mappings":"+wDAAC,SAAUA,OAAQC,SACC,gBAAnB,KAAOC,QAAP,YAAAC,QAAOD,eAA0C,KAAXE,OAAyBA,OAAOF,QAAUD,UAC9D,kBAAXI,SAAyBA,OAAOC,IAAMD,OAAO,gBAAiBJ,SACpED,OAAOO,cAAgBN,eAHxBO,GAIQ,WAAY,GAEfC,cAFe,WAGnB,QAAAA,gBAA4B,GAAhBC,WAAgBC,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,KAAAE,iBAAAC,KAAAL,cAC1BK,KAAKC,WAAa,GAAIC,KAAIN,WAC1BI,KAAKG,aAAe,GAAID,KALP,MAAAE,cAAAT,eAAAU,IAAA,gBAAAC,MAAA,QAAAC,eAQLC,WACZ,MAAKR,MAAKC,WAAWQ,IAAID,WAIFR,KAAKC,WAAWS,IAAIF,WACrBV,OAJb,KAVQO,IAAA,kBAAAC,MAAA,QAAAK,mBAiBmC,GAAAC,OAAAZ,KAAtCQ,UAAsCX,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAA1B,KAAMgB,WAAoBhB,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,IAAAA,UAAA,EAClC,QAAdW,UACEM,MAAMC,QAAQP,WAChBQ,KAAKC,QAAQ,SAAAC,GAAA,MAAKN,OAAKD,gBAAgBO,EAAGL,eAE1Cb,KAAKC,WAAWkB,OAAOX,WAEnBK,YACFb,KAAKoB,iBAAiBZ,YAI1BR,KAAKC,WAAa,GAAIC,QA7BPG,IAAA,aAAAC,MAAA,QAAAO,YAiCRL,UAAWa,IAAI,GAAAC,QAAAtB,IACpBc,OAAMC,QAAQP,WAChBQ,KAAKC,QAAQ,SAAAC,GAAA,MAAKI,QAAKT,WAAWK,EAAGG,OAEhCP,MAAMC,QAAQf,KAAKG,aAAaO,IAAIF,aACvCR,KAAKG,aAAaoB,IAAIf,cAGvBR,KAAKG,aAAaO,IAAIF,WAAYgB,KAAKH,QAzCzBhB,IAAA,mBAAAC,MAAA,QAAAc,oBA6CgB,GAAAK,QAAAzB,KAAlBQ,UAAkBX,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAAN,IACT,QAAdW,UACEM,MAAMC,QAAQP,WAChBQ,KAAKC,QAAQ,SAAAC,GAAA,MAAKO,QAAKL,iBAAiBF,KAExClB,KAAKG,aAAagB,OAAOX,WAG3BR,KAAKG,aAAe,GAAID,QArDTG,IAAA,KAAAC,MAAA,QAAAoB,IAyDhBV,KAAMW,UAAwB,GAAAC,QAAA5B,KAAd6B,KAAchC,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,IAAAA,UAAA,EAC/B,IAAIiB,MAAMC,QAAQC,MAChBA,KAAKC,QAAQ,SAAAC,GAAA,MAAKU,QAAKF,GAAGR,EAAGS,gBACxB,CACLX,KAAOA,KAAKc,UACZ,IAAMC,OAAQf,KAAKe,MAAM,SAErBA,OAAMjC,OAAS,EACjBiC,MAAMd,QAAQ,SAAAC,GAAA,MAAKU,QAAKF,GAAGR,EAAGS,aAEzBb,MAAMC,QAAQf,KAAKC,WAAWS,IAAIM,QACrChB,KAAKC,WAAWsB,IAAIP,SAGrBhB,KAAKC,WAAWS,IAAIM,MAAOQ,MAAMK,KAAMA,KAAMF,SAAUA,gBAvE3CtB,IAAA,OAAAC,MAAA,QAAAuB,MA4Edb,KAAMW,UACT3B,KAAK0B,GAAGV,KAAMW,UAAU,MA7EPtB,IAAA,OAAAC,MAAA,QAAA0B,MAgFdhB,KAAMiB,MAAsB,GAAAC,QAAAlC,KAAhBmC,OAAgBtC,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,IAAAA,UAAA,EAC/BmB,MAAOA,KAAKc,UACZ,IAAIlC,WAAYI,KAAKC,WAAWS,IAAIM,MAChCoB,YAAc,KACdC,UAAY,EACZC,QAAUH,MAEd,IAAIrB,MAAMC,QAAQnB,WAkChB,IAjCAA,UAAUqB,QAAQ,SAACsB,SAAUC,OAEtBL,SACHC,YAAcF,OAAK/B,aAAaO,IAAIM,MAEhCF,MAAMC,QAAQqB,cAChBA,YAAYnB,QAAQ,SAAAJ,YAClBA,WAAWoB,KAAM,WAAoB,GAAnBQ,SAAmB5C,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAAT,IACV,QAAZ4C,UACFR,KAAOQ,SAETJ,aACCrB,QAGDqB,WAAaD,YAAYtC,SAC3BwC,SAAU,IAGZA,SAAU,GAKVA,UACEC,SAASV,OACXjC,UAAU4C,OAAS,MAErBD,SAASZ,SAASM,UAKc,IAA7BrC,UAAU8C,QAAQ,OACvB9C,UAAU+C,OAAO/C,UAAU8C,QAAQ,MAAO,OA1H7B/C,gBAgIjBiD,iBAAkB,CACtB,KACE,GAAIC,MAAOC,OAAOC,kBAAmB,WACnCrC,IAAK,QAAAA,OACHkC,iBAAkB,IAGtBI,QAAOC,iBAAiB,cAAe,KAAMJ,MAC7CG,OAAOE,oBAAoB,cAAe,KAAML,MAChD,MAAO3B,IA4VT,MAreqB,UAAAiC,eA4InB,QAAAC,UAAYC,UAAUtD,gBAAAC,KAAAoD,SAAA,IAAAE,QAAAC,2BAAAvD,MAAAoD,SAAAI,WAAAV,OAAAW,eAAAL,WAAAM,KAAA1D,MASpB,IANAsD,OAAKK,cAAgB,aAAc,SAEnCL,OAAKM,SAA+B,gBAAbP,UACnBQ,SAASC,cAAcT,UACvBA,UAECC,OAAKM,SACR,KAAM,IAAIG,OAAM,yDAVE,OAcpBT,QAAKU,QAAUlB,OAAOmB,WACpBC,UAAW,GACXC,UAAW,IACXC,YAAa,MAGfd,OAAKe,OApBef,OA5IH,MAAAgB,WAAAlB,SAAAD,eAAA/C,aAAAgD,WAAA/C,IAAA,OAAAC,MAAA,QAAA+D,QAyLZ,GAAAE,QAAAvE,KACDwE,uBAAwB,CA4B5B,IA1BAxE,KAAKyE,cAAgBzB,OAAO0B,iBAAiB1E,KAAK4D,UAClD5D,KAAK2E,cAAgBC,SAAS5E,KAAKyE,cAAcI,iBAAiB,SAAU,IAE5E7E,KAAK8E,kBAAoB9E,KAAK4D,SAASE,cAAc,uBACrD9D,KAAK+E,cAAgB/E,KAAK4D,SAASoB,iBAAiB,kBACpDhF,KAAKiF,mBAAqBnE,MAAMoE,KAAKlF,KAAK+E,eAGtC/E,KAAK4D,SAASuB,QAAQC,OAASpF,KAAK4D,SAASyB,UAAUC,SAAS,2BAC9DtF,KAAK4D,SAASuB,QAAQC,MAAQpF,KAAKiF,mBAAmBnF,QACxDE,KAAKuF,OAAS,EACdf,uBAAwB,GAExBxE,KAAKuF,OAASvF,KAAK2E,cAAgB3E,KAAK4D,SAASuB,QAAQC,KAG3DpF,KAAK8E,kBAAkBU,MAAMC,KAAO,EAAIzF,KAAKuF,OAAS,KACtDvF,KAAK8E,kBAAkBU,MAAME,UAA7B,cAAuD1F,KAAKuF,OAA5D,SACGtE,QAAQyC,KAAK1D,KAAK+E,cAAe,SAAAY,cAClCA,aAAaH,MAAMI,UAAerB,OAAKgB,OAAvC,QAIJvF,KAAK6F,gBAAgBrB,uBAGjBxE,KAAK4D,SAASyB,UAAUC,SAAS,0BAA4BtF,KAAK+E,cAAcjF,OAAQ,CAC1F,GAAIgG,KAAM9F,KAAK+E,cAAc,GAAGjB,cAAc,OAC1CiC,MAAQ,CACRD,KAAIE,cACND,MAAQ/F,KAAK2E,cAAgBmB,IAAIE,aACjChG,KAAK8E,kBAAkBU,MAAMS,OAAUH,IAAII,cAAgBH,MAAS,MAEpED,IAAIK,OAAS,WACXJ,MAAQxB,OAAKI,cAAgBmB,IAAIE,aACjCzB,OAAKO,kBAAkBU,MAAMS,OAAUH,IAAII,cAAgBH,MAAS,MAK1E/F,KAAKoG,aACHxC,SAAU5D,KAAK4D,SACfyC,KAAM,KACNC,KAAM,GAERtG,KAAKoG,YAAYC,KAAOrG,KAAK4D,SAASE,cAAc,4BAA6B9D,KAAKoG,YAAYE,IAAMtG,KAAKoG,YAAYC,KACrHrG,KAAKiF,mBAAmBvC,QAAQ1C,KAAKoG,YAAYC,OAChD,EACArG,KAAKoG,YAAYC,OACpBrG,KAAKoG,YAAYC,KAAOrG,KAAK+E,cAAc,GAC3C/E,KAAKoG,YAAYC,KAAKhB,UAAUkB,IAAI,aACpCvG,KAAKoG,YAAYE,IAAM,GAGzBtG,KAAKwG,YAEDxG,KAAK4D,SAASuB,QAAQsB,UAA8C,QAAlCzG,KAAK4D,SAASuB,QAAQsB,UAC1DzG,KAAK0G,UAAU1G,KAAK4D,SAASuB,QAAQwB,OAAS,KAGhD3G,KAAK4G,cAEL5G,KAAKgC,KAAK,iBAAkBhC,KAAKoG,gBA1PhB/F,IAAA,kBAAAC,MAAA,QAAAuF,mBAkQkB,GAArBgB,aAAqBhH,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,IAAAA,UAAA,EACnCG,MAAK8G,gBAAkB9G,KAAK4D,SAASE,cAAc,sBACnD9D,KAAK+G,YAAc/G,KAAK4D,SAASE,cAAc,wBAE3C9D,KAAK+E,cAAcjF,QAAU,GAAK+G,eAChC7G,KAAK8E,oBACP9E,KAAK8E,kBAAkBU,MAAMC,KAAO,KAElCzF,KAAK8G,kBACP9G,KAAK8G,gBAAgBtB,MAAMwB,QAAU,QAEnChH,KAAK+G,cACP/G,KAAK+G,YAAYvB,MAAMwB,QAAU,YA9QpB3G,IAAA,cAAAC,MAAA,QAAAsG,eAwRL,GAAAK,QAAAjH,IACRA,MAAK8G,iBACP9G,KAAK2D,aAAa1C,QAAQ,SAAAiG,YACxBD,OAAKH,gBAAgB7D,iBAAiBiE,WAAY,SAAAhG,GAChDA,EAAEiG,iBACFF,OAAKG,OAAO,YACRH,OAAKI,oBACPC,cAAcL,OAAKI,mBACnBJ,OAAKP,UAAUO,OAAKrD,SAASuB,QAAQwB,OAAS,SAE/C/D,kBAAoB2E,SAAS,MAIhCvH,KAAK+G,aACP/G,KAAK2D,aAAa1C,QAAQ,SAAAiG,YACxBD,OAAKF,YAAY9D,iBAAiBiE,WAAY,SAAAhG,GAC5CA,EAAEiG,iBACFF,OAAKG,OAAO,QACRH,OAAKI,oBACPC,cAAcL,OAAKI,mBACnBJ,OAAKP,UAAUO,OAAKrD,SAASuB,QAAQwB,OAAS,SAE/C/D,kBAAoB2E,SAAS,MAKpCvH,KAAK4D,SAASX,iBAAiB,aAAc,SAAA/B,GAC3C+F,OAAKO,YAAYtG,MAChB0B,kBAAoB2E,SAAS,IAChCvH,KAAK4D,SAASX,iBAAiB,YAAa,SAAA/B,GACrC0B,iBACH1B,EAAEiG,oBAEHvE,kBAAoB2E,SAAS,IAChCvH,KAAK4D,SAASX,iBAAiB,WAAY,SAAA/B,GACzC+F,OAAKQ,UAAUvG,MACd0B,kBAAoB2E,SAAS,OA9TflH,IAAA,QAAAC,MAAA,QAAAoH,OAuUbC,SACJ,MAAIA,SAAQC,mBACHD,QAAQC,mBAER5H,KAAK+E,cAAc,MA3UX1E,IAAA,YAAAC,MAAA,QAAAuH,WAqVTF,SACR,MAAIA,SAAQG,uBACHH,QAAQG,uBAER9H,KAAK+E,cAAc/E,KAAK+E,cAAcjF,OAAS,MAzVvCO,IAAA,YAAAC,MAAA,QAAAkG,aAkWjBxG,KAAKoG,YAAYC,KAAKb,MAAMuC,MAAQ,IACpC/H,KAAKoG,YAAYC,KAAKb,MAAMwC,OAAS,GACrC,IAAIC,MAAOjI,KAAKoG,YAAYC,KACxB6B,MAAA,GACFC,MAAA,GACAC,QAAA,EACF,KACEF,EAAIC,EAAI,EAAGC,IAAMpI,KAAKiF,mBAAmBnF,OACvC,GAAKsI,IACHD,GAAKC,IACLD,GAAKC,IAAMF,EAAI,GAAKE,MACpBD,IACAA,EACJF,KAAOjI,KAAK0H,MAAMO,MAClBA,KAAKzC,MAAMuC,MAAQ,GAAKG,EAAIlI,KAAKiF,mBAAmBnF,OACpDmI,KAAKzC,MAAMwC,OAAS,OAjXL3H,IAAA,cAAAC,MAAA,QAAAkH,aA2XPtG,GACVA,EAAEiG,iBAEFjG,EAAIA,GAAQ8B,OAAOqF,MACnBnH,EAAK,kBAAoBA,GAAKA,EAAEoH,eAAe,GAAKpH,EACpDlB,KAAKuI,QACHC,OACEC,MAAM,GAAIC,OAAOC,UACjBC,EAAG1H,EAAE2H,MACLC,EAAG5H,EAAE6H,OAEPC,MACEJ,EAAG,EACHE,EAAG,OAxYUzI,IAAA,YAAAC,MAAA,QAAAmH,WAmZTvG,GACRA,EAAEiG,iBAEFjG,EAAIA,GAAQ8B,OAAOqF,MACnBnH,EAAK,kBAAoBA,GAAKA,EAAEoH,eAAe,GAAKpH,EACpDlB,KAAKuI,OAAOS,MACVJ,EAAG1H,EAAE2H,MAAQ7I,KAAKuI,OAAOC,MAAMI,EAC/BE,EAAG5H,EAAE6H,MAAQ/I,KAAKuI,OAAOC,MAAMM,GAGjC9I,KAAKiJ,oBA7ZY5I,IAAA,iBAAAC,MAAA,QAAA2I,mBAsaG,GAAIP,OAAOC,UAAY3I,KAAKuI,OAAOC,MAAMC,MAC1CzI,KAAKgE,QAAQI,aAC1B8E,KAAKC,IAAInJ,KAAKuI,OAAOS,KAAKJ,IAAM5I,KAAKgE,QAAQE,WAAagF,KAAKC,IAAInJ,KAAKuI,OAAOS,KAAKF,IAAM9I,KAAKgE,QAAQG,YACxGnE,KAAKuI,OAAOS,KAAKJ,EAAI,EAClB5I,KAAKoH,OAAO,QACZpH,KAAKoH,OAAO,gBA3aH/G,IAAA,SAAAC,MAAA,QAAA8G,UAsbQ,GAAAgC,QAAApJ,KAApBqJ,UAAoBxJ,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAAR,MACbG,MAAK+E,cAAcjF,SACrBE,KAAKsJ,YAActJ,KAAKoG,YAAYC,KACpCrG,KAAKgC,KAAK,wBAAyBhC,KAAKoG,aAEtB,aAAdiD,WACFrJ,KAAKoG,YAAYC,KAAOrG,KAAK6H,UAAU7H,KAAKoG,YAAYC,MAEnDrG,KAAK4D,SAASyB,UAAUC,SAAS,2BACpCtF,KAAK4D,SAASyB,UAAUkB,IAAI,gBAC5BvG,KAAK8E,kBAAkBU,MAAME,UAA7B,eAA0DwD,KAAKC,IAAInJ,KAAKuF,QAAxE,SAIFvF,KAAKoG,YAAYC,KAAOrG,KAAK0H,MAAM1H,KAAKoG,YAAYC,MAEpDrG,KAAK4D,SAASyB,UAAUkE,OAAO,gBAC/BvJ,KAAK8E,kBAAkBU,MAAME,UAA7B,cAAuDwD,KAAKC,IAAInJ,KAAKuF,QAArE,OAEFvF,KAAKoG,YAAYC,KAAKhB,UAAUkB,IAAI,aACpCvG,KAAKsJ,YAAYjE,UAAUkE,OAAO,aAGlCvJ,KAAK4D,SAASyB,UAAUkE,OAAO,qBAE/BC,WAAW,WACTJ,OAAKxF,SAASyB,UAAUkB,IAAI,sBAC3B,IAEHvG,KAAKwG,YACLxG,KAAKgC,KAAK,uBAAwBhC,KAAKoG,iBApdxB/F,IAAA,YAAAC,MAAA,QAAAoG,aA8dK,GAAA+C,SAAAzJ,KAAd2G,MAAc9G,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAAN,GAChBG,MAAKqH,kBAAoBqC,YAAY,WACnCD,QAAKrC,OAAO,SACXT,YAjectG,IAAA,SAAAC,MAAA,QAAAqJ,UAwKmC,GAAxCtG,UAAwCxD,UAAAC,OAAA,OAAAJ,KAAAG,UAAA,GAAAA,UAAA,GAA7B,4BACnB+J,kBAAoB,GAAI9I,OAEtB+I,UAAYhG,SAASmB,iBAAiB3B,SAM5C,UALGpC,QAAQyC,KAAKmG,UAAW,SAAAjG,UACzB4F,WAAW,WACTI,kBAAkBpI,KAAK,GAAI4B,UAASQ,YACnC,OAEEgG,sBAjLUxG,UA2IEzD","file":"bulma-carousel.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('bulmaCarousel', factory) :\n\t(global.bulmaCarousel = factory());\n}(this, (function () { 'use strict';\n\nclass EventEmitter {\n  constructor(listeners = []) {\n    this._listeners = new Map(listeners);\n    this._middlewares = new Map();\n  }\n\n  listenerCount(eventName) {\n    if (!this._listeners.has(eventName)) {\n      return 0;\n    }\n\n    const eventListeners = this._listeners.get(eventName);\n    return eventListeners.length;\n  }\n\n  removeListeners(eventName = null, middleware = false) {\n    if (eventName !== null) {\n      if (Array.isArray(eventName)) {\n        name.forEach(e => this.removeListeners(e, middleware));\n      } else {\n        this._listeners.delete(eventName);\n\n        if (middleware) {\n          this.removeMiddleware(eventName);\n        }\n      }\n    } else {\n      this._listeners = new Map();\n    }\n  }\n\n  middleware(eventName, fn) {\n    if (Array.isArray(eventName)) {\n      name.forEach(e => this.middleware(e, fn));\n    } else {\n      if (!Array.isArray(this._middlewares.get(eventName))) {\n        this._middlewares.set(eventName, []);\n      }\n\n      (this._middlewares.get(eventName)).push(fn);\n    }\n  }\n\n  removeMiddleware(eventName = null) {\n    if (eventName !== null) {\n      if (Array.isArray(eventName)) {\n        name.forEach(e => this.removeMiddleware(e));\n      } else {\n        this._middlewares.delete(eventName);\n      }\n    } else {\n      this._middlewares = new Map();\n    }\n  }\n\n  on(name, callback, once = false) {\n    if (Array.isArray(name)) {\n      name.forEach(e => this.on(e, callback));\n    } else {\n      name = name.toString();\n      const split = name.split(/,|, | /);\n\n      if (split.length > 1) {\n        split.forEach(e => this.on(e, callback));\n      } else {\n        if (!Array.isArray(this._listeners.get(name))) {\n          this._listeners.set(name, []);\n        }\n\n        (this._listeners.get(name)).push({once: once, callback: callback});\n      }\n    }\n  }\n\n  once(name, callback) {\n    this.on(name, callback, true);\n  }\n\n  emit(name, data, silent = false) {\n    name = name.toString();\n    let listeners = this._listeners.get(name);\n    let middlewares = null;\n    let doneCount = 0;\n    let execute = silent;\n\n    if (Array.isArray(listeners)) {\n      listeners.forEach((listener, index) => {\n        // Start Middleware checks unless we're doing a silent emit\n        if (!silent) {\n          middlewares = this._middlewares.get(name);\n          // Check and execute Middleware\n          if (Array.isArray(middlewares)) {\n            middlewares.forEach(middleware => {\n              middleware(data, (newData = null) => {\n                if (newData !== null) {\n                  data = newData;\n                }\n                doneCount++;\n              }, name);\n            });\n\n            if (doneCount >= middlewares.length) {\n              execute = true;\n            }\n          } else {\n            execute = true;\n          }\n        }\n\n        // If Middleware checks have been passed, execute\n        if (execute) {\n          if (listener.once) {\n            listeners[index] = null;\n          }\n          listener.callback(data);\n        }\n      });\n\n      // Dirty way of removing used Events\n      while (listeners.indexOf(null) !== -1) {\n        listeners.splice(listeners.indexOf(null), 1);\n      }\n    }\n  }\n}\n\nvar supportsPassive = false;\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nclass Carousel extends EventEmitter {\n  constructor(selector) {\n    super();\n\n    this._clickEvents = ['touchstart', 'click'];\n\n    this.carousel = typeof selector === 'string'\n      ? document.querySelector(selector)\n      : selector;\n    // An invalid selector or non-DOM node has been provided.\n    if (!this.carousel) {\n      throw new Error('An invalid selector or non-DOM node has been provided.');\n    }\n\n    /// Set default options and merge with instance defined\n    this.options = Object.assign({}, {\n      threshold: 50, //required min distance traveled to be considered swipe\n      restraint: 100, // maximum distance allowed at the same time in perpendicular direction\n      allowedTime: 500 // maximum time allowed to travel that distance\n    });\n\n    this.init();\n  }\n\n  /**\n   * Initiate all DOM element containing carousel class\n   * @method\n   * @return {Array} Array of all Carousel instances\n   */\n  static attach(selector = '.carousel, .hero-carousel') {\n    let carouselInstances = new Array();\n\n    const carousels = document.querySelectorAll(selector);\n    [].forEach.call(carousels, carousel => {\n      setTimeout(() => {\n        carouselInstances.push(new Carousel(carousel));\n      }, 100);\n    });\n    return carouselInstances;\n  }\n\n  /**\n   * Initiate plugin\n   * @method init\n   * @return {void}\n   */\n  init() {\n    let forceHiddenNavigation = false;\n\n    this.computedStyle = window.getComputedStyle(this.carousel);\n    this.carouselWidth = parseInt(this.computedStyle.getPropertyValue('width'), 10);\n\n    this.carouselContainer = this.carousel.querySelector('.carousel-container');\n    this.carouselItems = this.carousel.querySelectorAll('.carousel-item');\n    this.carouselItemsArray = Array.from(this.carouselItems);\n\n    // Detect which animation is setup and auto-calculate size and transformation\n    if (this.carousel.dataset.size && !this.carousel.classList.contains('carousel-animate-fade')) {\n      if (this.carousel.dataset.size >= this.carouselItemsArray.length) {\n        this.offset = 0;\n        forceHiddenNavigation = true;\n      } else {\n        this.offset = this.carouselWidth / this.carousel.dataset.size;\n      }\n\n      this.carouselContainer.style.left = 0 - this.offset + 'px';\n      this.carouselContainer.style.transform = `translateX(${this.offset}px)`;\n      [].forEach.call(this.carouselItems, carouselItem => {\n        carouselItem.style.flexBasis = `${this.offset}px`;\n      });\n    }\n\n    this._initNavigation(forceHiddenNavigation);\n\n    // If animation is fade then force carouselContainer size (due to the position: absolute)\n    if (this.carousel.classList.contains('carousel-animate-fade') && this.carouselItems.length) {\n      let img = this.carouselItems[0].querySelector('img');\n      let scale = 1;\n      if (img.naturalWidth) {\n        scale = this.carouselWidth / img.naturalWidth;\n        this.carouselContainer.style.height = (img.naturalHeight * scale) + 'px';\n      } else {\n        img.onload = () => {\n          scale = this.carouselWidth / img.naturalWidth;\n          this.carouselContainer.style.height = (img.naturalHeight * scale) + 'px';\n        };\n      }\n    }\n\n    this.currentItem = {\n      carousel: this.carousel,\n      node: null,\n      pos: -1\n    };\n    this.currentItem.node = this.carousel.querySelector('.carousel-item.is-active'), this.currentItem.pos = this.currentItem.node\n      ? this.carouselItemsArray.indexOf(this.currentItem.node)\n      : -1;\n    if (!this.currentItem.node) {\n      this.currentItem.node = this.carouselItems[0];\n      this.currentItem.node.classList.add('is-active');\n      this.currentItem.pos = 0;\n    }\n\n    this._setOrder();\n\n    if (this.carousel.dataset.autoplay && this.carousel.dataset.autoplay == 'true') {\n      this._autoPlay(this.carousel.dataset.delay || 5000);\n    }\n\n    this._bindEvents();\n\n    this.emit('carousel:ready', this.currentItem);\n  }\n\n  /**\n   * Initiate Navigation area and Previous/Next buttons\n   * @method _initNavigation\n   * @return {[type]}        [description]\n   */\n  _initNavigation(forceHidden = false) {\n    this.previousControl = this.carousel.querySelector('.carousel-nav-left');\n    this.nextControl = this.carousel.querySelector('.carousel-nav-right');\n\n    if (this.carouselItems.length <= 1 || forceHidden) {\n      if (this.carouselContainer) {\n        this.carouselContainer.style.left = '0';\n      }\n      if (this.previousControl) {\n        this.previousControl.style.display = 'none';\n      }\n      if (this.nextControl) {\n        this.nextControl.style.display = 'none';\n      }\n    }\n  }\n\n  /**\n   * Bind all events\n   * @method _bindEvents\n   * @return {void}\n   */\n  _bindEvents() {\n    if (this.previousControl) {\n      this._clickEvents.forEach(clickEvent => {\n        this.previousControl.addEventListener(clickEvent, e => {\n          e.preventDefault();\n          this._slide('previous');\n          if (this._autoPlayInterval) {\n            clearInterval(this._autoPlayInterval);\n            this._autoPlay(this.carousel.dataset.delay || 5000);\n          }\n        }, supportsPassive ? { passive: true } : false);\n      });\n    }\n\n    if (this.nextControl) {\n      this._clickEvents.forEach(clickEvent => {\n        this.nextControl.addEventListener(clickEvent, e => {\n          e.preventDefault();\n          this._slide('next');\n          if (this._autoPlayInterval) {\n            clearInterval(this._autoPlayInterval);\n            this._autoPlay(this.carousel.dataset.delay || 5000);\n          }\n        }, supportsPassive ? { passive: true } : false);\n      });\n    }\n\n    // Bind swipe events\n    this.carousel.addEventListener('touchstart', e => {\n      this._swipeStart(e);\n    }, supportsPassive ? { passive: true } : false);\n    this.carousel.addEventListener('touchmove', e => {\n      if (!supportsPassive) {\n        e.preventDefault();\n      }\n    }, supportsPassive ? { passive: true } : false);\n    this.carousel.addEventListener('touchend', e => {\n      this._swipeEnd(e);\n    }, supportsPassive ? { passive: true } : false);\n  }\n\n  /**\n   * Find next item to display\n   * @method _next\n   * @param  {Node} element Current Node element\n   * @return {Node}         Next Node element\n   */\n  _next(element) {\n    if (element.nextElementSibling) {\n      return element.nextElementSibling;\n    } else {\n      return this.carouselItems[0];\n    }\n  }\n\n  /**\n   * Find previous item to display\n   * @method _previous\n   * @param  {Node}  element Current Node element\n   * @return {Node}          Previous Node element\n   */\n  _previous(element) {\n    if (element.previousElementSibling) {\n      return element.previousElementSibling;\n    } else {\n      return this.carouselItems[this.carouselItems.length - 1];\n    }\n  }\n\n  /**\n   * Update each item order\n   * @method _setOrder\n   */\n  _setOrder() {\n    this.currentItem.node.style.order = '1';\n    this.currentItem.node.style.zIndex = '1';\n    let item = this.currentItem.node;\n    let i,\n      j,\n      ref;\n    for (\n      i = j = 2, ref = this.carouselItemsArray.length; (\n        2 <= ref\n        ? j <= ref\n        : j >= ref); i = 2 <= ref\n      ? ++j\n      : --j) {\n      item = this._next(item);\n      item.style.order = '' + i % this.carouselItemsArray.length;\n      item.style.zIndex = '0';\n    }\n  }\n\n  /**\n   * Save current position on start swiping\n   * @method _swipeStart\n   * @param  {Event}    e Swipe event\n   * @return {void}\n   */\n  _swipeStart(e) {\n    e.preventDefault();\n\n    e = e ? e : window.event;\n    e = ('changedTouches' in e) ? e.changedTouches[0] : e;\n    this._touch = {\n      start: {\n        time: new Date().getTime(), // record time when finger first makes contact with surface\n        x: e.pageX,\n        y: e.pageY\n      },\n      dist: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  /**\n   * Save current position on end swiping\n   * @method _swipeEnd\n   * @param  {Event}  e swipe event\n   * @return {void}\n   */\n  _swipeEnd(e) {\n    e.preventDefault();\n\n    e = e ? e : window.event;\n    e = ('changedTouches' in e) ? e.changedTouches[0] : e;\n    this._touch.dist = {\n      x: e.pageX - this._touch.start.x, // get horizontal dist traveled by finger while in contact with surface\n      y: e.pageY - this._touch.start.y // get vertical dist traveled by finger while in contact with surface\n    };\n\n    this._handleGesture();\n  }\n\n  /**\n   * Identify the gestureand slide if necessary\n   * @method _handleGesture\n   * @return {void}\n   */\n  _handleGesture() {\n    const elapsedTime = new Date().getTime() - this._touch.start.time; // get time elapsed\n    if (elapsedTime <= this.options.allowedTime) { // first condition for awipe met\n      if (Math.abs(this._touch.dist.x) >= this.options.threshold && Math.abs(this._touch.dist.y) <= this.options.restraint) { // 2nd condition for horizontal swipe met\n        (this._touch.dist.x < 0)\n          ? this._slide('next')\n          : this._slide('previous'); // if dist traveled is negative, it indicates left swipe\n      }\n    }\n  }\n\n  /**\n   * Update slides to display the wanted one\n   * @method _slide\n   * @param  {String} [direction='next'] Direction in which items need to move\n   * @return {void}\n   */\n  _slide(direction = 'next') {\n    if (this.carouselItems.length) {\n      this.oldItemNode = this.currentItem.node;\n      this.emit('carousel:slide:before', this.currentItem);\n      // initialize direction to change order\n      if (direction === 'previous') {\n        this.currentItem.node = this._previous(this.currentItem.node);\n        // add reverse class\n        if (!this.carousel.classList.contains('carousel-animate-fade')) {\n          this.carousel.classList.add('is-reversing');\n          this.carouselContainer.style.transform = `translateX(${ - Math.abs(this.offset)}px)`;\n        }\n      } else {\n        // Reorder items\n        this.currentItem.node = this._next(this.currentItem.node);\n        // re_slide reverse class\n        this.carousel.classList.remove('is-reversing');\n        this.carouselContainer.style.transform = `translateX(${Math.abs(this.offset)}px)`;\n      }\n      this.currentItem.node.classList.add('is-active');\n      this.oldItemNode.classList.remove('is-active');\n\n      // Disable transition to instant change order\n      this.carousel.classList.remove('carousel-animated');\n      // Enable transition to animate order 1 to order 2\n      setTimeout(() => {\n        this.carousel.classList.add('carousel-animated');\n      }, 50);\n\n      this._setOrder();\n      this.emit('carousel:slide:after', this.currentItem);\n    }\n  }\n\n  /**\n   * Initiate autoplay system\n   * @method _autoPlay\n   * @param  {Number}  [delay=5000] Delay between slides in milliseconds\n   * @return {void}\n   */\n  _autoPlay(delay = 5000) {\n    this._autoPlayInterval = setInterval(() => {\n      this._slide('next');\n    }, delay);\n  }\n}\n\nreturn Carousel;\n\n})));\n"]}