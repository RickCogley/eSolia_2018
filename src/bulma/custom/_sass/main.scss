@charset "utf-8";

// Customization

// You can easily customize Bulma with your own variables.
// Just uncomment the following block to see the result.


// 1. Import the initial variables and functions, so you can override
@import "../../bower_components/bulma/sass/utilities/initial-variables";
@import "../../bower_components/bulma/sass/utilities/functions";

// 2. Set your own initial variables
// Update the blue shade, used for links
// $blue: #06bcef;
// Add pink and its invert
// $pink: #ff8080;
// $pink-invert: #fff;
// Update the sans-serif font family
$family-sans-serif: "ryo-gothic-plusn", "Segoe UI", "Roboto", "Oxygen", "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue", "Helvetica", "Arial", sans-serif;
$family-monospace: "source-code-pro", "monospace";

// 3. Set the derived variables
// Use the new pink as the primary color
// $primary: $pink;
// $primary-invert: $pink-invert;

// Top Nav Tweak
$navbar-box-shadow-color: $grey-lighter !default;

// 4. Setup your Custom Colors
$linkedin: #0077b5;
$linkedin-invert: findColorInvert($linkedin);
$twitter: #55acee;
$twitter-invert: findColorInvert($twitter);
$github: #333;
$github-invert: findColorInvert($github);

$grey-dark2:    hsl(0, 0%, 27%) !default
$grey-dark2-invert: findColorInvert($grey-dark2);


// 5. Add new color variables to the color map.
@import "../../bower_components/bulma/sass/utilities/derived-variables";
$addColors: (
  "grey-dark2":($grey-dark2, $grey-dark2-invert),
  "twitter":($twitter, $twitter-invert),
  "linkedin": ($linkedin, $linkedin-invert),
  "github": ($github, $github-invert)
);
$colors: map-merge($colors, $addColors);

// 6. Import the rest of Bulma

// Don't need the extension for bulma.sass, just bulma
@import "../../bower_components/bulma/bulma";
// Also import extensions
@import "../../bower_components/bulma-accordion/dist/bulma-accordion";
@import "../../bower_components/bulma-badge/dist/bulma-badge";
@import "../../bower_components/bulma-calendar/dist/bulma-calendar";
@import "../../bower_components/bulma-carousel/dist/bulma-carousel";
@import "../../bower_components/bulma-checkradio/dist/bulma-checkradio";
@import "../../bower_components/bulma-divider/dist/bulma-divider";
@import "../../bower_components/bulma-iconpicker/dist/bulma-iconpicker";
@import "../../bower_components/bulma-pageloader/dist/bulma-pageloader";
@import "../../bower_components/bulma-pricingtable/dist/bulma-pricingtable";
@import "../../bower_components/bulma-quickview/dist/bulma-quickview";
@import "../../bower_components/bulma-ribbon/dist/bulma-ribbon";
@import "../../bower_components/bulma-slider/dist/bulma-slider";
@import "../../bower_components/bulma-steps/dist/bulma-steps";
@import "../../bower_components/bulma-switch/dist/bulma-switch";
@import "../../bower_components/bulma-tagsinput/dist/bulma-tagsinput";
@import "../../bower_components/bulma-timeline/dist/bulma-timeline";
@import "../../bower_components/bulma-tooltip/dist/bulma-tooltip";

// Custom extensionã€€/Users/rcogley/dev/eSolia_2018/src/bulma/custom/_sass/
@import "_spacing";

// CUSTOM CSS
// set background color of pages
html { background-color: $grey-darker;}

// set max width of paragraphs for ease of reading
p,ul,ol,table {
    max-width: 38em;
    // margin: auto;
}

// try to fix strong not inheriting color
strong {
   color: inherit;
   font-weight: $strong-weight;
   }

// set hero backgrounds
$backgrounds: (bg-totsukabridge: '/img/Cogley-Banner-JR-Totsuka-Bridge-2-mono.jpg', bg-templecolumn: '/img/eSolia-Cogley-Azabudai-to-Atago-Tokyo-20131031-5318b.jpg', bg-atagotunnel: '/img/eSolia-Cogley-Azabudai-to-Atago-Tokyo-20131031-5355b.jpg', bg-networkswitch: '/img/eSolia-Cogley-Network-Switch-1.jpg');

@each $key, $image in $backgrounds {
  .hero-#{$key} {
    @extend .hero;
    background-image: url('#{$image}');
    background-size: cover !important;
  }
}

// Shade for blocks from dansup on github
.is-shaded {
    animation: flyintoright .4s backwards;
    background: $grey-darker;
    box-shadow: rgba(0, 0, 0, .1) 0 1px 0;
    border-radius: 4px;
    display: inline-block;
    margin: 1px;
    position: relative;
    transition: all .2s ease-in-out;
}
.is-shaded:hover {
    box-shadow: 0 1px 2px rgba(255, 255, 255, .13), 0 1px 1px rgba(255, 255, 255, .19);
}

// Inner page sidebar
.is-sidebar-menu {
  padding: 1.8rem 0rem 1.5rem 1.5rem;
  line-height: 1rem;
  background: $grey-dark;
  li {
    a {
      color: $white;
    }
  }
}

.columns {
  &.is-fullheight {
    min-height: calc(100vh - ( #{$navbar-height} - .75rem ) );
    max-height: calc(100vh - ( #{$navbar-height} - .75rem ) );
    display: flex;
    flex-direction: row;
    justify-content: stretch;
    .column {
      overflow-y: auto;
    }
  }
}

.is-main-content {
  background: $grey-lighter;
  background-image: url("/img/background4.png");
}

// Menu Tweaking

// edited
.menu-list {
  line-height: 1.15;
}

.menu-list a {
  // border-radius: 2px;
  // color: #4a4a4a;
  // display: block;
  // padding: 0.5em 0.75em;
  padding: 0.5em .5em;
}

.menu-list a:hover {
  background-color: whitesmoke;
  color: #363636;
  border-left: 4px solid $info;
}

// edited color
.menu-list a.is-active {
  background-color: $info;
  color: #fff;
  border-left: 4px solid $white;
}

.menu-list li ul {
  border-left: 1px solid #dbdbdb;
  margin: 0.75em;
  // margin: 1.75em;
  padding-left: 0.75em;
  // padding-left: .1em;
}

// edited font-size, bgcolor, padd
.menu-label {
  color: #7a7a7a;
  font-size: 0.9em;
  background-color: $grey-dark2;
  padding: .5em 1em .5em 1em;
  letter-spacing: 0.1em;
  text-transform: uppercase;
  border-radius: 2px;
}

.menu-label:not(:first-child) {
  margin-top: 1em;
}

.menu-label:not(:last-child) {
  margin-bottom: 1em;
}

.menu-label:hover {
  background-color: $grey-lighter;
  border-left: 4px solid $info;
}

// List
.list-has-no-style {
  padding-left: 0;
  list-style: none;
}
